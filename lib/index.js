"use strict";
/**
 * @package html-to-pdf-node
 * @author Namindu Ranathunga
 * @version 1.0.0
 * 2024
 * The original code was converted to typescript and changed the h by Namindu Ranathunga
 * Originally written by Shyam Hajare <hajareshyam@gmail.com>
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.create = void 0;
const ejs = __importStar(require("ejs"));
const pdf = __importStar(require("html-pdf"));
/**
 * create function is used to create pdf from ejs templates.
 * @param  {document, options}
 * @return {callback}
 */
const create = (document, options) => {
    return new Promise((resolve, reject) => {
        if (!document || !document.html || !document.data) {
            reject(new Error("Some, or all, options are missing."));
        }
        // Compiles a template
        var html = (document.render !== false) ? ejs.render(document.html, document.data) : document.html; // default is true - will use ejs.render
        var pdfPromise = pdf.create(html, options);
        // Create PDF from html template generated by ejs
        // Output will be PDF file
        switch (document.type) {
            case "buffer":
                pdfPromise.toBuffer((err, res) => {
                    if (!err)
                        resolve(res);
                    else
                        reject(err);
                });
                break;
            case "stream":
                pdfPromise.toStream((err, res) => {
                    if (!err)
                        resolve(res);
                    else
                        reject(err);
                });
                break;
            default:
                pdfPromise.toFile(document.path, (err, res) => {
                    if (!err)
                        resolve(res);
                    else
                        reject(err);
                });
                break;
        }
    });
};
exports.create = create;
